{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import rootReducer from'./projects';import{persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';var persistConfig={key:'root',storage:storage};var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/src/redux/store.js"],"names":["configureStore","rootReducer","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,YAAxB,CACA,OACEC,cADF,CAEEC,KAFF,CAGEC,SAHF,CAIEC,KAJF,CAKEC,OALF,CAMEC,KANF,CAOEC,QAPF,KAQO,eARP,CASA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBF,OAAO,CAAPA,OAFoB,CAAtB,CAIA,GAAMG,CAAAA,gBAAgB,CAAGV,cAAc,CAACQ,aAAD,CAAgBT,WAAhB,CAAvC,CAEA,MAAO,IAAMY,CAAAA,KAAK,CAAGb,cAAc,CAAC,CAClCc,OAAO,CAAEF,gBADyB,CAElCG,UAAU,CAAE,oBAACC,oBAAD,QACVA,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACf,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CADV,EAFsB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './projects';\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n"]},"metadata":{},"sourceType":"module"}