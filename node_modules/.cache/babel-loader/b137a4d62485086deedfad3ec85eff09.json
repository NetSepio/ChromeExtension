{"ast":null,"code":"import _slicedToArray from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Grid,Typography,Checkbox,FormControlLabel,Button}from'@mui/material';import React,{useState}from'react';import LoginStyles from'./LoginStyles';import Input from'../input/Input';import crypto from'crypto-js';import{useSelector}from'react-redux';import{addMnemonic,saveHashedMnemonic,updateStep}from'../../redux/projects/projectSlice';import{useDispatch}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var styles=LoginStyles();var dispatch=useDispatch();var myMnemonic=useSelector(function(state){return state.project.mnemonic;});var activeStep=useSelector(function(state){return state.project.activeStep;});var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var onChange=function onChange(e){switch(e.target.name){case'password':setPassword(e.target.value);break;case'confirmPassword':setConfirmPassword(e.target.value);break;default:break;}};var handleChangeChecked=function handleChangeChecked(event){setChecked(event.target.checked);};var handleContinue=function handleContinue(){var hashed=crypto.AES.encrypt(myMnemonic,password).toString();dispatch(saveHashedMnemonic({data:hashed}));dispatch(updateStep({data:activeStep+1}));dispatch(addMnemonic({date:''}));// const decrypted=crypto.AES.decrypt(hashed,'vicky29@').toString(crypto.enc.Utf8)\n// console.log(decrypted,\"m decrypted\")\n};return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,style:{marginBottom:'0.45rem'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",style:{color:'#fff'},children:\"Create a password\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",style:{opacity:0.5,color:'#fff'},children:\"You will use this to unlock your wallet\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Input,{label:\"Password\",name:\"password\",value:password,onChange:onChange,type:\"password\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Input,{label:\"Confirm Password\",name:\"confirmPassword\",value:confirmPassword,onChange:onChange,type:\"password\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(FormControlLabel,{label:/*#__PURE__*/_jsxs(\"p\",{style:{color:'#999999'},children:[\"I agree to the\",/*#__PURE__*/_jsx(\"label\",{style:{color:'#8a81f8',marginLeft:8},children:\"Terms of Service\"})]}),control:/*#__PURE__*/_jsx(Checkbox,{checked:checked,onChange:handleChangeChecked})})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{width:'100%'},onClick:handleContinue,disabled:password.length<6||confirmPassword.length<6||!checked,children:\"Continue\"})})]});};export default Login;","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/login/Login.jsx"],"names":["Grid","Typography","Checkbox","FormControlLabel","Button","React","useState","LoginStyles","Input","crypto","useSelector","addMnemonic","saveHashedMnemonic","updateStep","useDispatch","Login","styles","dispatch","myMnemonic","state","project","mnemonic","activeStep","password","setPassword","confirmPassword","setConfirmPassword","checked","setChecked","onChange","e","target","name","value","handleChangeChecked","event","handleContinue","hashed","AES","encrypt","toString","data","date","marginBottom","color","item","opacity","marginLeft","width","length"],"mappings":"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","sourcesContent":["import { Grid, Typography, Checkbox, FormControlLabel ,Button} from '@mui/material';\nimport React, { useState } from 'react';\nimport LoginStyles from './LoginStyles';\nimport Input from '../input/Input';\nimport crypto from 'crypto-js'\nimport { useSelector } from 'react-redux';\nimport { addMnemonic, saveHashedMnemonic, updateStep } from '../../redux/projects/projectSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Login = () => {\n  const styles = LoginStyles();\n  const dispatch=useDispatch()\n  const myMnemonic=useSelector(state=>state.project.mnemonic)\n  const activeStep=useSelector(state=>state.project.activeStep)\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [checked, setChecked] = React.useState(true);\n\n  const onChange = (e) => {\n    switch (e.target.name) {\n      case 'password':\n        setPassword(e.target.value);\n        break;\n      case 'confirmPassword':\n        setConfirmPassword(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeChecked = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const handleContinue=()=>{\n    const hashed=crypto.AES.encrypt(myMnemonic,password).toString();\n    dispatch(saveHashedMnemonic({data:hashed}))\n    dispatch(updateStep({data:activeStep+1}))\n    dispatch(addMnemonic({date:''}))\n    // const decrypted=crypto.AES.decrypt(hashed,'vicky29@').toString(crypto.enc.Utf8)\n    // console.log(decrypted,\"m decrypted\")\n  }\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item style={{marginBottom:'0.45rem'}}>\n        <Typography variant=\"h5\" align=\"center\" style={{ color: '#fff' }}>\n          Create a password\n        </Typography>\n      </Grid>\n      <Grid item className={styles.item}>\n        <Typography\n          variant=\"body1\"\n          align=\"center\"\n          style={{ opacity: 0.5, color: '#fff' }}\n        >\n          You will use this to unlock your wallet\n        </Typography>\n      </Grid>\n      <Grid item className={styles.item}>\n        <Input\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          type=\"password\"\n        />\n      </Grid>\n      <Grid item className={styles.item}>\n        <Input\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={onChange}\n          type=\"password\"\n        />\n      </Grid>\n      <Grid item className={styles.item}>\n        <FormControlLabel\n          label={\n            <p style={{ color: '#999999' }}>\n              I agree to the\n              <label style={{ color: '#8a81f8', marginLeft: 8 }}>\n                Terms of Service\n              </label>\n            </p>\n          }\n          control={\n            <Checkbox checked={checked} onChange={handleChangeChecked} />\n          }\n        />\n      </Grid>\n\n      <Grid item className={styles.item} xs={12}>\n        <Button variant=\"contained\" color=\"primary\" style={{ width: '100%' }}\n          onClick={handleContinue}\n          disabled={password.length<6||confirmPassword.length<6||!checked}\n        >\n          Continue\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}