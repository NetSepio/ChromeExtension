{"ast":null,"code":"var _jsxFileName = \"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/Existing/wallet/ExistingWallet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { ethers } from 'ethers';\nimport commonStyles from '../../../styles/commonStyles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMnemonic, updateStep } from '../../../redux/projects/projectSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewWallet = () => {\n  _s();\n\n  const styles = commonStyles();\n  const dispatch = useDispatch();\n  const activeStep = useSelector(state => state.project.activeStep);\n  const [loading, setLoading] = React.useState(false);\n  const [defaultAccount, setDefaultAccount] = useState('');\n  const [mannual, setMannual] = useState('');\n\n  const handleExistingWallet = async () => {\n    try {\n      const mnemonicWallet = ethers.Wallet.fromMnemonic(mannual);\n      let foundWallet = await mnemonicWallet.getAddress();\n\n      if (foundWallet.length > 0) {\n        dispatch(addMnemonic({\n          data: mannual\n        }));\n        dispatch(updateStep({\n          data: activeStep + 1\n        }));\n      }\n    } catch (error) {\n      console.log(error, 'wallet found');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.item,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        style: {\n          color: '#fff'\n        },\n        children: \"Secret Recovery Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.item,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        style: {\n          color: '#ffdc62'\n        },\n        children: \"Restore an existing wallet with your 12 or 24-word secret recovery phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        marginBottom: '4rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        className: styles.walletText,\n        value: mannual,\n        onChange: e => setMannual(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            width: '100%'\n          },\n          onClick: handleExistingWallet,\n          children: \"Import secret recovery phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewWallet, \"CWUjAfpKCHjEylNkBLWRgu5wD2c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewWallet;\nexport default NewWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWallet\");","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/Existing/wallet/ExistingWallet.jsx"],"names":["React","useEffect","useState","Grid","Typography","Button","LoadingButton","AccountBalanceWalletIcon","ethers","commonStyles","useDispatch","useSelector","addMnemonic","updateStep","NewWallet","styles","dispatch","activeStep","state","project","loading","setLoading","defaultAccount","setDefaultAccount","mannual","setMannual","handleExistingWallet","mnemonicWallet","Wallet","fromMnemonic","foundWallet","getAddress","length","data","error","console","log","item","color","marginBottom","walletText","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { ethers } from 'ethers';\nimport commonStyles from '../../../styles/commonStyles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMnemonic, updateStep } from '../../../redux/projects/projectSlice';\n\nconst NewWallet = () => {\n  const styles = commonStyles();\n  const dispatch = useDispatch();\n  const activeStep=useSelector(state=>state.project.activeStep)\n  const [loading, setLoading] = React.useState(false);\n  const [defaultAccount, setDefaultAccount] = useState('');\n  const [mannual, setMannual] = useState('');\n\n  const handleExistingWallet = async () => {\n    try {\n      const mnemonicWallet = ethers.Wallet.fromMnemonic(mannual);\n      let foundWallet = await mnemonicWallet.getAddress();\n      if (foundWallet.length > 0) {\n        dispatch(addMnemonic({ data: mannual }));\n        dispatch(updateStep({data:activeStep+1}))\n      }\n    } catch (error) {\n      console.log(error, 'wallet found');\n    }\n  };\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={styles.item}>\n        <Typography variant=\"h5\" align=\"center\" style={{ color: '#fff' }}>\n          Secret Recovery Phrase\n        </Typography>\n      </Grid>\n      <Grid item className={styles.item}>\n        <Typography variant=\"body1\" align=\"center\" style={{ color: '#ffdc62' }}>\n          Restore an existing wallet with your 12 or 24-word secret recovery\n          phrase\n        </Typography>\n      </Grid>\n      <Grid item style={{ marginBottom: '4rem' }}>\n        <textarea\n          rows=\"3\"\n          className={styles.walletText}\n          value={mannual}\n          onChange={(e) => setMannual(e.target.value)}\n        />\n      </Grid>\n      <Grid item container xs justifyContent=\"center\">\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: '100%' }}\n            onClick={handleExistingWallet}\n          >\n            Import secret recovery phrase\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewWallet;\n"]},"metadata":{},"sourceType":"module"}