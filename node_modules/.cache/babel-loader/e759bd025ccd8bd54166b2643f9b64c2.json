{"ast":null,"code":"var _jsxFileName = \"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/popup/LandingDialogue.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid } from '@mui/material';\nimport { DialogTitle, DialogContent, DialogContentText, Typography, Button, Dialog } from '@mui/material';\nimport DialogStyles from './DialogStyles';\nimport MainDialogue from './MainDialogue';\nimport { useDispatch } from 'react-redux';\nimport { updateStep } from '../../redux/projects/projectSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingDialogue = _ref => {\n  _s();\n\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const styles = DialogStyles();\n  const dispatch = useDispatch();\n  const [mainDialogue, setMainDialogue] = useState(false);\n  const [activeExisting, setActiveExisting] = useState(false);\n\n  const handleCloseMainDialogue = () => {\n    setMainDialogue(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open // TransitionComponent={Transition}\n    ,\n    keepMounted: true // onClose={handleClose}\n    ,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    PaperProps: {\n      style: {\n        backgroundColor: '#222222',\n        padding: '0px 1rem 1rem 1rem',\n        borderRadius: 10\n      }\n    },\n    maxWidth: \"xs\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"alert-dialog-slide-description\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: styles.commonMargin,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/icon.png\",\n              alt: \"img\",\n              className: styles.logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h5\",\n              className: styles.typo1,\n              children: \"Net Sapio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h6\",\n              className: styles.textTypo,\n              children: \"A crypto wallet for NFTs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            style: {\n              marginTop: '50%'\n            },\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: styles.commonMargin,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: styles.btn,\n                onClick: () => {\n                  handleClose();\n                  setActiveExisting(false);\n                  setMainDialogue(true);\n                },\n                children: \"Create New Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                className: styles.btn,\n                onClick: () => {\n                  handleClose();\n                  setActiveExisting(true);\n                  setMainDialogue(true);\n                  dispatch(updateStep({\n                    data: 0\n                  }));\n                },\n                children: \"Import Existing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainDialogue, {\n      open: mainDialogue,\n      handleClose: handleCloseMainDialogue,\n      activeExisting: activeExisting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LandingDialogue, \"y5t23fjyuSqqYLLUzOTq2NtBCKE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LandingDialogue;\nexport default LandingDialogue;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingDialogue\");","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/popup/LandingDialogue.jsx"],"names":["React","useState","Grid","DialogTitle","DialogContent","DialogContentText","Typography","Button","Dialog","DialogStyles","MainDialogue","useDispatch","updateStep","LandingDialogue","open","handleClose","styles","dispatch","mainDialogue","setMainDialogue","activeExisting","setActiveExisting","handleCloseMainDialogue","style","backgroundColor","padding","borderRadius","commonMargin","logo","typo1","textTypo","marginTop","btn","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid } from '@mui/material';\nimport {\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Typography,\n  Button,\n  Dialog,\n} from '@mui/material';\nimport DialogStyles from './DialogStyles';\nimport MainDialogue from './MainDialogue';\nimport { useDispatch } from 'react-redux';\nimport { updateStep } from '../../redux/projects/projectSlice';\n\nconst LandingDialogue = ({ open, handleClose }) => {\n  const styles = DialogStyles();\n  const dispatch=useDispatch()\n  const [mainDialogue, setMainDialogue] = useState(false);\n  const [activeExisting, setActiveExisting] = useState(false);\n\n  const handleCloseMainDialogue = () => {\n    setMainDialogue(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      // TransitionComponent={Transition}\n      keepMounted\n      // onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      PaperProps={{\n        style: {\n          backgroundColor: '#222222',\n          padding: '0px 1rem 1rem 1rem',\n          borderRadius: 10,\n        },\n      }}\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item className={styles.commonMargin}>\n              <img src=\"/images/icon.png\" alt=\"img\" className={styles.logo} />\n            </Grid>\n            <Grid item>\n              <Typography align=\"center\" variant=\"h5\" className={styles.typo1}>\n                Net Sapio\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography\n                align=\"center\"\n                variant=\"h6\"\n                className={styles.textTypo}\n              >\n                A crypto wallet for NFTs\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              container\n              style={{ marginTop: '50%' }}\n              direction=\"column\"\n            >\n              <Grid item xs={12} className={styles.commonMargin}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={styles.btn}\n                  onClick={() => {\n                    handleClose();\n                    setActiveExisting(false);\n                    setMainDialogue(true);\n                  }}\n                >\n                  Create New Wallet\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  className={styles.btn}\n                  onClick={() => {\n                    handleClose();\n                    setActiveExisting(true);\n                    setMainDialogue(true);\n                    dispatch(updateStep({ data: 0 }));\n                  }}\n                >\n                  Import Existing\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </DialogContentText>\n      </DialogContent>\n      <MainDialogue\n        open={mainDialogue}\n        handleClose={handleCloseMainDialogue}\n        activeExisting={activeExisting}\n      />\n    </Dialog>\n  );\n};\n\nexport default LandingDialogue;\n"]},"metadata":{},"sourceType":"module"}