{"ast":null,"code":"var _jsxFileName = \"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/Dashboard/comp/Password.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { Grid } from '@mui/material';\nimport Input from '../../common/Input/Input';\nimport DashboardStyles from '../DashboardStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nconst Password = _ref => {\n  _s();\n\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const styles = DashboardStyles();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case 'currentPassword':\n        setCurrentPassword(e.target.value);\n        break;\n\n      case 'newPassword':\n        setNewPassword(e.target.value);\n        break;\n\n      case 'confirmNewPassword':\n        setConfirmNewPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      PaperProps: {\n        style: {\n          backgroundColor: '#2c2d30'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        sx: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"column\",\n          className: styles.passwordContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"gainsboro\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"currentPassword\",\n              label: \"\",\n              placeholder: \"Current password\",\n              value: currentPassword,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"gainsboro\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"currentPassword\",\n              label: \"\",\n              placeholder: \"Current password\",\n              value: currentPassword,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Password, \"bMwa61yp0Uejkv2YNsl+RqcuNKk=\");\n\n_c3 = Password;\nexport default Password;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Password\");","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/Dashboard/comp/Password.jsx"],"names":["React","useState","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Grid","Input","DashboardStyles","Transition","forwardRef","props","ref","Password","open","handleClose","styles","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","onChange","e","target","name","value","style","backgroundColor","position","passwordContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { Grid } from '@mui/material';\nimport Input from '../../common/Input/Input';\nimport DashboardStyles from '../DashboardStyles';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Password = ({ open, handleClose }) => {\n    const styles=DashboardStyles()\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n\n  const onChange = (e) => {\n    switch (e.target.name) {\n      case 'currentPassword':\n        setCurrentPassword(e.target.value);\n        break;\n      case 'newPassword':\n        setNewPassword(e.target.value);\n        break;\n      case 'confirmNewPassword':\n        setConfirmNewPassword(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        PaperProps={{\n          style: {\n            backgroundColor: '#2c2d30',\n          },\n        }}\n      >\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Grid container justifyContent=\"center\">\n          <Grid item container direction=\"column\" className={styles.passwordContainer}>\n            <Grid item>\n              <Typography variant=\"h5\" color=\"gainsboro\">\n                Change Password\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Input\n                name=\"currentPassword\"\n                label=\"\"\n                placeholder=\"Current password\"\n                value={currentPassword}\n                onChange={onChange}\n              />\n            </Grid>{' '}\n            <Grid item>\n              <Typography variant=\"h5\" color=\"gainsboro\">\n                Change Password\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Input\n                name=\"currentPassword\"\n                label=\"\"\n                placeholder=\"Current password\"\n                value={currentPassword}\n                onChange={onChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n};\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}