{"ast":null,"code":"var _jsxFileName = \"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/ExistingWallet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Typography, TextField, Button } from '@mui/material';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExistingWallet = () => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const [walletAddress, setWalletAddress] = useState('');\n\n  const handleExistingWallet = async () => {\n    const mnemonicWallet = ethers.Wallet.fromMnemonic(val);\n    let foundWallet = await mnemonicWallet.getAddress();\n    setWalletAddress(foundWallet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Bring Your Own Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginBottom: '1rem'\n        },\n        children: \"Enter your seed words to import an existing ETH wallet and take control of all your Blockchain Transactions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        minWidth: '15rem',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Seed Words\",\n        multiline: true,\n        rows: 4,\n        defaultValue: \"\",\n        fullWidth: true,\n        style: {\n          color: '#fff'\n        },\n        value: val,\n        onChange: e => setVal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: walletAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleExistingWallet,\n        children: \"Import Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExistingWallet, \"C6NlIPVBS0gC/VtmumRS+4nofGA=\");\n\n_c = ExistingWallet;\nexport default ExistingWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingWallet\");","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/ExistingWallet.jsx"],"names":["React","useState","Grid","Typography","TextField","Button","ethers","ExistingWallet","val","setVal","walletAddress","setWalletAddress","handleExistingWallet","mnemonicWallet","Wallet","fromMnemonic","foundWallet","getAddress","marginBottom","minWidth","color","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,eAApD;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMW,oBAAoB,GAAG,YAAW;AACtC,UAAMC,cAAc,GAAGP,MAAM,CAACQ,MAAP,CAAcC,YAAd,CAA2BP,GAA3B,CAAvB;AACA,QAAIQ,WAAW,GAAG,MAAMH,cAAc,CAACI,UAAf,EAAxB;AACAN,IAAAA,gBAAgB,CAACK,WAAD,CAAhB;AACD,GAJD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAlB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAE;AAAEA,UAAAA,YAAY,EAAE;AAAhB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBD,QAAAA,YAAY,EAAE;AAAnC,OAAlB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,2BADL;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,YAAY,EAAC,EALf;AAME,QAAA,SAAS,MANX;AAOE,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAPT;AAQE,QAAA,KAAK,EAAEZ,GART;AASE,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,MAAM,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AATzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAuBE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,gBAAYb;AAAZ;AAAA;AAAA;AAAA;AAAA,YAvBF,eAwBE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEE,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxCD;;GAAML,c;;KAAAA,c;AA0CN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Typography, TextField, Button } from '@mui/material';\nimport { ethers } from 'ethers';\n\nconst ExistingWallet = () => {\n  const [val, setVal] = useState('');\n  const [walletAddress, setWalletAddress] = useState('');\n  const handleExistingWallet = async() => {\n    const mnemonicWallet = ethers.Wallet.fromMnemonic(val);\n    let foundWallet = await mnemonicWallet.getAddress();\n    setWalletAddress(foundWallet);\n  };\n  return (\n    <Grid container direction=\"column\">\n      <Grid item style={{ marginBottom: '1rem' }}>\n        <Typography variant=\"h6\">Bring Your Own Wallet</Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"body1\" style={{ marginBottom: '1rem' }}>\n          Enter your seed words to import an existing ETH wallet and take\n          control of all your Blockchain Transactions.\n        </Typography>\n      </Grid>\n      <Grid item style={{ minWidth: '15rem', marginBottom: '1rem' }}>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Seed Words\"\n          multiline\n          rows={4}\n          defaultValue=\"\"\n          fullWidth\n          style={{color:'#fff'}}\n          value={val}\n          onChange={(e) => setVal(e.target.value)}\n        />\n      </Grid>\n      <Grid item>{walletAddress}</Grid>\n      <Grid item>\n        <Button variant=\"contained\" onClick={handleExistingWallet}>\n          Import Wallet\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ExistingWallet;\n"]},"metadata":{},"sourceType":"module"}