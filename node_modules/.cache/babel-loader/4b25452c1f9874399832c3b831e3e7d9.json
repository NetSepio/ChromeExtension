{"ast":null,"code":"import _asyncToGenerator from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{Grid,Typography,Button}from'@mui/material';import LoadingButton from'@mui/lab/LoadingButton';import AccountBalanceWalletIcon from'@mui/icons-material/AccountBalanceWallet';import{ethers}from'ethers';import commonStyles from'../../../styles/commonStyles';import{useDispatch,useSelector}from'react-redux';import{addMnemonic,updateStep}from'../../../redux/projects/projectSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewWallet=function NewWallet(){var styles=commonStyles();var dispatch=useDispatch();var activeStep=useSelector(function(state){return state.project.activeStep;});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),defaultAccount=_useState2[0],setDefaultAccount=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),mannual=_useState4[0],setMannual=_useState4[1];var handleExistingWallet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var mnemonicWallet,foundWallet;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;mnemonicWallet=ethers.Wallet.fromMnemonic(mannual);_context.next=4;return mnemonicWallet.getAddress();case 4:foundWallet=_context.sent;if(foundWallet.length>0){dispatch(addMnemonic({data:mannual}));dispatch(updateStep({data:activeStep+1}));}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0,'wallet found');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function handleExistingWallet(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",style:{color:'#fff'},children:\"Secret Recovery Phrase\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",style:{color:'#ffdc62'},children:\"Restore an existing wallet with your 12 or 24-word secret recovery phrase\"})}),/*#__PURE__*/_jsx(Grid,{item:true,style:{marginBottom:'4rem'},children:/*#__PURE__*/_jsx(\"textarea\",{rows:\"3\",className:styles.walletText,value:mannual,onChange:function onChange(e){return setMannual(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:true,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{width:'100%'},onClick:handleExistingWallet,children:\"Import secret recovery phrase\"})})})]});};export default NewWallet;","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/Existing/wallet/ExistingWallet.jsx"],"names":["React","useEffect","useState","Grid","Typography","Button","LoadingButton","AccountBalanceWalletIcon","ethers","commonStyles","useDispatch","useSelector","addMnemonic","updateStep","NewWallet","styles","dispatch","activeStep","state","project","loading","setLoading","defaultAccount","setDefaultAccount","mannual","setMannual","handleExistingWallet","mnemonicWallet","Wallet","fromMnemonic","getAddress","foundWallet","length","data","console","log","item","color","marginBottom","walletText","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { ethers } from 'ethers';\nimport commonStyles from '../../../styles/commonStyles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMnemonic, updateStep } from '../../../redux/projects/projectSlice';\n\nconst NewWallet = () => {\n  const styles = commonStyles();\n  const dispatch = useDispatch();\n  const activeStep=useSelector(state=>state.project.activeStep)\n  const [loading, setLoading] = React.useState(false);\n  const [defaultAccount, setDefaultAccount] = useState('');\n  const [mannual, setMannual] = useState('');\n\n  const handleExistingWallet = async () => {\n    try {\n      const mnemonicWallet = ethers.Wallet.fromMnemonic(mannual);\n      let foundWallet = await mnemonicWallet.getAddress();\n      if (foundWallet.length > 0) {\n        dispatch(addMnemonic({ data: mannual }));\n        dispatch(updateStep({data:activeStep+1}))\n      }\n    } catch (error) {\n      console.log(error, 'wallet found');\n    }\n  };\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={styles.item}>\n        <Typography variant=\"h5\" align=\"center\" style={{ color: '#fff' }}>\n          Secret Recovery Phrase\n        </Typography>\n      </Grid>\n      <Grid item className={styles.item}>\n        <Typography variant=\"body1\" align=\"center\" style={{ color: '#ffdc62' }}>\n          Restore an existing wallet with your 12 or 24-word secret recovery\n          phrase\n        </Typography>\n      </Grid>\n      <Grid item style={{ marginBottom: '4rem' }}>\n        <textarea\n          rows=\"3\"\n          className={styles.walletText}\n          value={mannual}\n          onChange={(e) => setMannual(e.target.value)}\n        />\n      </Grid>\n      <Grid item container xs justifyContent=\"center\">\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: '100%' }}\n            onClick={handleExistingWallet}\n          >\n            Import secret recovery phrase\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewWallet;\n"]},"metadata":{},"sourceType":"module"}