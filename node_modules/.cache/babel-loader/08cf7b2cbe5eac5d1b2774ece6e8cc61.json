{"ast":null,"code":"import _slicedToArray from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Grid}from'@mui/material';import{DialogTitle,DialogContent,DialogContentText,Typography,Button,Dialog}from'@mui/material';import DialogStyles from'./DialogStyles';import MainDialogue from'./MainDialogue';import{useDispatch}from'react-redux';import{updateStep}from'../../redux/projects/projectSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LandingDialogue=function LandingDialogue(_ref){var open=_ref.open,handleClose=_ref.handleClose;var styles=DialogStyles();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),mainDialogue=_useState2[0],setMainDialogue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),activeExisting=_useState4[0],setActiveExisting=_useState4[1];var handleCloseMainDialogue=function handleCloseMainDialogue(){setMainDialogue(false);};useEffect(function(){setActiveExisting(false);},[]);return/*#__PURE__*/_jsxs(Dialog,{open:open// TransitionComponent={Transition}\n,keepMounted:true// onClose={handleClose}\n,\"aria-describedby\":\"alert-dialog-slide-description\",PaperProps:{style:{backgroundColor:'#222222',padding:'0px 1rem 1rem 1rem',borderRadius:10}},maxWidth:\"xs\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-slide-description\",children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,className:styles.commonMargin,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/icon.png\",alt:\"img\",className:styles.logo})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{align:\"center\",variant:\"h5\",className:styles.typo1,children:\"Net Sapio\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{align:\"center\",variant:\"h6\",className:styles.textTypo,children:\"A crypto wallet for NFTs\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,style:{marginTop:'50%'},direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:styles.commonMargin,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",className:styles.btn,onClick:function onClick(){handleClose();setActiveExisting(false);setMainDialogue(true);},children:\"Create New Wallet\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",className:styles.btn,onClick:function onClick(){handleClose();setActiveExisting(true);setMainDialogue(true);dispatch(updateStep({data:0}));},children:\"Import Existing\"})})]})]})})}),/*#__PURE__*/_jsx(MainDialogue,{open:mainDialogue,handleClose:handleCloseMainDialogue,activeExisting:activeExisting})]});};export default LandingDialogue;","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/popup/LandingDialogue.jsx"],"names":["React","useEffect","useState","Grid","DialogTitle","DialogContent","DialogContentText","Typography","Button","Dialog","DialogStyles","MainDialogue","useDispatch","updateStep","LandingDialogue","open","handleClose","styles","dispatch","mainDialogue","setMainDialogue","activeExisting","setActiveExisting","handleCloseMainDialogue","style","backgroundColor","padding","borderRadius","commonMargin","logo","typo1","textTypo","marginTop","btn","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid } from '@mui/material';\nimport {\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Typography,\n  Button,\n  Dialog,\n} from '@mui/material';\nimport DialogStyles from './DialogStyles';\nimport MainDialogue from './MainDialogue';\nimport { useDispatch } from 'react-redux';\nimport { updateStep } from '../../redux/projects/projectSlice';\n\nconst LandingDialogue = ({ open, handleClose }) => {\n  const styles = DialogStyles();\n  const dispatch=useDispatch()\n  const [mainDialogue, setMainDialogue] = useState(false);\n  const [activeExisting, setActiveExisting] = useState(false);\n\n  const handleCloseMainDialogue = () => {\n    setMainDialogue(false);\n  };\n\n  useEffect(()=>{\n    setActiveExisting(false)\n  },[])\n  return (\n    <Dialog\n      open={open}\n      // TransitionComponent={Transition}\n      keepMounted\n      // onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      PaperProps={{\n        style: {\n          backgroundColor: '#222222',\n          padding: '0px 1rem 1rem 1rem',\n          borderRadius: 10,\n        },\n      }}\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item className={styles.commonMargin}>\n              <img src=\"/images/icon.png\" alt=\"img\" className={styles.logo} />\n            </Grid>\n            <Grid item>\n              <Typography align=\"center\" variant=\"h5\" className={styles.typo1}>\n                Net Sapio\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography\n                align=\"center\"\n                variant=\"h6\"\n                className={styles.textTypo}\n              >\n                A crypto wallet for NFTs\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              container\n              style={{ marginTop: '50%' }}\n              direction=\"column\"\n            >\n              <Grid item xs={12} className={styles.commonMargin}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={styles.btn}\n                  onClick={() => {\n                    handleClose();\n                    setActiveExisting(false);\n                    setMainDialogue(true);\n                  }}\n                >\n                  Create New Wallet\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  className={styles.btn}\n                  onClick={() => {\n                    handleClose();\n                    setActiveExisting(true);\n                    setMainDialogue(true);\n                    dispatch(updateStep({ data: 0 }));\n                  }}\n                >\n                  Import Existing\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </DialogContentText>\n      </DialogContent>\n      <MainDialogue\n        open={mainDialogue}\n        handleClose={handleCloseMainDialogue}\n        activeExisting={activeExisting}\n      />\n    </Dialog>\n  );\n};\n\nexport default LandingDialogue;\n"]},"metadata":{},"sourceType":"module"}