{"ast":null,"code":"import _slicedToArray from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import SwipeableDrawer from'@mui/material/SwipeableDrawer';import{ListItem,List,ListItemText,IconButton}from'@mui/material';import DrawerStyles from'./DrawerStyles';import{Link}from'react-router-dom';import MenuOutlinedIcon from'@mui/icons-material/MenuOutlined';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Drawer(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openDrawer=_useState2[0],setopenDrawer=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setvalue=_useState4[1];var classes=DrawerStyles();var itemsArr=[{name:'Profile',route:'/'},{name:'Help & Feedback',route:'/about'},{name:'Lock Wallet',route:'/products'}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(SwipeableDrawer,{disableRipple:true,open:openDrawer,onClose:function onClose(){return setopenDrawer(false);},onOpen:function onOpen(){return setopenDrawer(true);},classes:{paper:classes.drawer},children:[/*#__PURE__*/_jsx(\"div\",{className:classes.toolbarMarginDrawer}),/*#__PURE__*/_jsx(List,{disablePadding:true,children:itemsArr.map(function(item,index){return/*#__PURE__*/_jsx(ListItem,{divider:true,button:true,component:Link,to:\"/\",onClick:function onClick(){setopenDrawer(false);setvalue(index);},className:classes.drawerText,selected:value===0,classes:{selected:classes.drawerItemSelected},children:/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,children:item.name})});})})]}),/*#__PURE__*/_jsx(IconButton,{className:classes.drawerIconContainer,onClick:function onClick(){return setopenDrawer(!openDrawer);},children:/*#__PURE__*/_jsx(MenuOutlinedIcon,{className:classes.drawerIcon})})]});}","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/drawer/Drawer.jsx"],"names":["React","useState","SwipeableDrawer","ListItem","List","ListItemText","IconButton","DrawerStyles","Link","MenuOutlinedIcon","Drawer","openDrawer","setopenDrawer","value","setvalue","classes","itemsArr","name","route","paper","drawer","toolbarMarginDrawer","map","item","index","drawerText","selected","drawerItemSelected","drawerIconContainer","drawerIcon"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,YAAzB,CAAuCC,UAAvC,KAAyD,eAAzD,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,C,wFAEA,cAAe,SAASC,CAAAA,MAAT,EAAkB,CAC/B,cAAoCT,QAAQ,CAAC,KAAD,CAA5C,wCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAA0BX,QAAQ,CAAC,CAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,OAAO,CAAGR,YAAY,EAA5B,CAEA,GAAMS,CAAAA,QAAQ,CAAG,CACf,CAAEC,IAAI,CAAE,SAAR,CAAmBC,KAAK,CAAE,GAA1B,CADe,CAEf,CAAED,IAAI,CAAE,iBAAR,CAA2BC,KAAK,CAAE,QAAlC,CAFe,CAGf,CAAED,IAAI,CAAE,aAAR,CAAuBC,KAAK,CAAE,WAA9B,CAHe,CAAjB,CAKA,mBACE,oCACE,MAAC,eAAD,EACE,aAAa,KADf,CAEE,IAAI,CAAEP,UAFR,CAGE,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAHX,CAIE,MAAM,CAAE,wBAAMA,CAAAA,aAAa,CAAC,IAAD,CAAnB,EAJV,CAKE,OAAO,CAAE,CAAEO,KAAK,CAAEJ,OAAO,CAACK,MAAjB,CALX,wBAOE,YAAK,SAAS,CAAEL,OAAO,CAACM,mBAAxB,EAPF,cAQE,KAAC,IAAD,EAAM,cAAc,KAApB,UACGL,QAAQ,CAACM,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,qBACZ,KAAC,QAAD,EACE,OAAO,KADT,CAEE,MAAM,KAFR,CAGE,SAAS,CAAEhB,IAHb,CAIE,EAAE,CAAE,GAJN,CAKE,OAAO,CAAE,kBAAM,CACbI,aAAa,CAAC,KAAD,CAAb,CACAE,QAAQ,CAACU,KAAD,CAAR,CACD,CARH,CASE,SAAS,CAAET,OAAO,CAACU,UATrB,CAUE,QAAQ,CAAEZ,KAAK,GAAK,CAVtB,CAWE,OAAO,CAAE,CAAEa,QAAQ,CAAEX,OAAO,CAACY,kBAApB,CAXX,uBAaE,KAAC,YAAD,EAAc,iBAAiB,KAA/B,UAAiCJ,IAAI,CAACN,IAAtC,EAbF,EADY,EAAb,CADH,EARF,GADF,cA6BE,KAAC,UAAD,EACE,SAAS,CAAEF,OAAO,CAACa,mBADrB,CAEE,OAAO,CAAE,yBAAMhB,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAFX,uBAIE,KAAC,gBAAD,EAAkB,SAAS,CAAEI,OAAO,CAACc,UAArC,EAJF,EA7BF,GADF,CAsCD","sourcesContent":["import React, { useState } from 'react';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport { ListItem, List, ListItemText, IconButton } from '@mui/material';\nimport DrawerStyles from './DrawerStyles';\nimport { Link } from 'react-router-dom';\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\n\nexport default function Drawer() {\n  const [openDrawer, setopenDrawer] = useState(false);\n  const [value, setvalue] = useState(0);\n  const classes = DrawerStyles();\n\n  const itemsArr = [\n    { name: 'Profile', route: '/' },\n    { name: 'Help & Feedback', route: '/about' },\n    { name: 'Lock Wallet', route: '/products' },\n  ];\n  return (\n    <div>\n      <SwipeableDrawer\n        disableRipple\n        open={openDrawer}\n        onClose={() => setopenDrawer(false)}\n        onOpen={() => setopenDrawer(true)}\n        classes={{ paper: classes.drawer }}\n      >\n        <div className={classes.toolbarMarginDrawer} />\n        <List disablePadding>\n          {itemsArr.map((item, index) => (\n            <ListItem\n              divider\n              button\n              component={Link}\n              to={\"/\"}\n              onClick={() => {\n                setopenDrawer(false);\n                setvalue(index);\n              }}\n              className={classes.drawerText}\n              selected={value === 0}\n              classes={{ selected: classes.drawerItemSelected }}\n            >\n              <ListItemText disableTypography>{item.name}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setopenDrawer(!openDrawer)}\n      >\n        <MenuOutlinedIcon className={classes.drawerIcon} />\n      </IconButton>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}