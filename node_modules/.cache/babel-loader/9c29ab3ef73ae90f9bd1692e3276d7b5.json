{"ast":null,"code":"import _asyncToGenerator from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{Grid,Typography,Button}from'@mui/material';import LoadingButton from'@mui/lab/LoadingButton';import AccountBalanceWalletIcon from'@mui/icons-material/AccountBalanceWallet';import{ethers}from'ethers';import commonStyles from'../styles/commonStyles';import{addMnemonic}from'../redux/projects/projectSlice';import{useDispatch,useSelector}from'react-redux';import{updateStep}from'../redux/projects/projectSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewWallet=function NewWallet(){var styles=commonStyles();var dispatch=useDispatch();var myMnemonic=useSelector(function(state){return state.project.mnemonic;});var activeStep=useSelector(function(state){return state.project.activeStep;});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),defaultAccount=_useState2[0],setDefaultAccount=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),mnemonic=_useState4[0],setMnemonic=_useState4[1];var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var mnemonic,mnemonicWallet,walletAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:mnemonic=ethers.Wallet.createRandom().mnemonic.phrase;setMnemonic(mnemonic);mnemonicWallet=ethers.Wallet.fromMnemonic(mnemonic);_context.next=5;return mnemonicWallet.getAddress();case 5:walletAddress=_context.sent;console.log(walletAddress+' '+mnemonicWallet.privateKey);setDefaultAccount(walletAddress);case 8:case\"end\":return _context.stop();}}},_callee);}));return function handleClick(){return _ref.apply(this,arguments);};}();useEffect(function(){var getMnemonic=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var mnemonic,mnemonicWallet,walletAddress;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:mnemonic=ethers.Wallet.createRandom().mnemonic.phrase;setMnemonic(mnemonic);mnemonicWallet=ethers.Wallet.fromMnemonic(mnemonic);_context2.next=5;return mnemonicWallet.getAddress();case 5:walletAddress=_context2.sent;console.log(walletAddress+' '+mnemonicWallet.privateKey);setDefaultAccount(walletAddress);dispatch(addMnemonic({data:mnemonic}));case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function getMnemonic(){return _ref2.apply(this,arguments);};}();(myMnemonic===null||myMnemonic===void 0?void 0:myMnemonic.length)===0&&getMnemonic();},[]);return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",style:{color:'#fff'},children:\"Secret Recovery Phrase\"})}),/*#__PURE__*/_jsx(Grid,{item:true,className:styles.item,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",style:{color:'#ffdc62'},children:\"This is the only way you will be able to recover your account. Please store it somewhere safe!\"})}),/*#__PURE__*/_jsx(Grid,{item:true,style:{marginBottom:'4rem'},children:/*#__PURE__*/_jsx(\"textarea\",{rows:\"3\",readOnly:true,className:styles.walletText,value:myMnemonic})}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:true,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{width:'100%'},onClick:function onClick(){return dispatch(updateStep({data:activeStep+1}));},disabled:(myMnemonic===null||myMnemonic===void 0?void 0:myMnemonic.length)===0,children:\"Next\"})})})]});};export default NewWallet;","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/components/NewWallet.jsx"],"names":["React","useEffect","useState","Grid","Typography","Button","LoadingButton","AccountBalanceWalletIcon","ethers","commonStyles","addMnemonic","useDispatch","useSelector","updateStep","NewWallet","styles","dispatch","myMnemonic","state","project","mnemonic","activeStep","loading","setLoading","defaultAccount","setDefaultAccount","setMnemonic","handleClick","Wallet","createRandom","phrase","mnemonicWallet","fromMnemonic","getAddress","walletAddress","console","log","privateKey","getMnemonic","data","length","item","color","marginBottom","walletText","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { ethers } from 'ethers';\nimport commonStyles from '../styles/commonStyles';\nimport { addMnemonic } from '../redux/projects/projectSlice';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { updateStep } from '../redux/projects/projectSlice';\n\nconst NewWallet = () => {\n  const styles=commonStyles()\n  const dispatch=useDispatch()\n  const myMnemonic=useSelector(state=>state.project.mnemonic)\n  const activeStep = useSelector((state) => state.project.activeStep);\n  const [loading, setLoading] = React.useState(false);\n  const [defaultAccount, setDefaultAccount] = useState('');\n  const [mnemonic, setMnemonic] = useState('');\n\n  const handleClick = async () => {\n    let mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    setMnemonic(mnemonic);\n    let mnemonicWallet = ethers.Wallet.fromMnemonic(mnemonic);\n    let walletAddress = await mnemonicWallet.getAddress();\n    console.log(walletAddress + ' ' + mnemonicWallet.privateKey);\n    setDefaultAccount(walletAddress);\n  };\n\n  useEffect(() => {\n    const getMnemonic = async () => {\n      let mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n      setMnemonic(mnemonic);\n      let mnemonicWallet = ethers.Wallet.fromMnemonic(mnemonic);\n      let walletAddress = await mnemonicWallet.getAddress();\n      console.log(walletAddress + ' ' + mnemonicWallet.privateKey);\n      setDefaultAccount(walletAddress);\n      dispatch(addMnemonic({data:mnemonic}))\n      \n    };\n    myMnemonic?.length===0 && getMnemonic();\n  }, []);\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={styles.item}>\n        <Typography variant=\"h5\" align=\"center\" style={{ color: '#fff' }}>\n          Secret Recovery Phrase\n        </Typography>\n      </Grid>\n      <Grid item className={styles.item}>\n        <Typography variant=\"body1\" align=\"center\" style={{ color: '#ffdc62' }}>\n          This is the only way you will be able to recover your account. Please\n          store it somewhere safe!\n        </Typography>\n      </Grid>\n      <Grid item style={{ marginBottom: '4rem' }}>\n        <textarea\n          rows=\"3\"\n          readOnly\n          className={styles.walletText}\n          value={myMnemonic}\n        />\n      </Grid>\n      <Grid item container xs justifyContent=\"center\">\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: '100%' }}\n            onClick={()=> dispatch(updateStep({ data: activeStep + 1 }))}\n            disabled={myMnemonic?.length===0}\n          >\n            Next\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewWallet;\n"]},"metadata":{},"sourceType":"module"}