{"ast":null,"code":"var _jsxFileName = \"/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/Dashboard/comp/Password.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { Grid, TextField } from '@mui/material';\nimport Input from '../../common/Input/Input';\nimport DashboardStyles from '../DashboardStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nconst Password = _ref => {\n  _s();\n\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const styles = DashboardStyles();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case 'currentPassword':\n        setCurrentPassword(e.target.value);\n        break;\n\n      case 'newPassword':\n        setNewPassword(e.target.value);\n        break;\n\n      case 'confirmNewPassword':\n        setConfirmNewPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    PaperProps: {\n      style: {\n        backgroundColor: '#2c2d30'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      sx: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: handleClose,\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Password, \"bMwa61yp0Uejkv2YNsl+RqcuNKk=\");\n\n_c3 = Password;\nexport default Password;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Password\");","map":{"version":3,"sources":["/Users/vickykumarprasad/Desktop/chrome/ChromiumExtension/net-sapio/src/Dashboard/comp/Password.jsx"],"names":["React","useState","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Grid","TextField","Input","DashboardStyles","Transition","forwardRef","props","ref","Password","open","handleClose","styles","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","onChange","e","target","name","value","style","backgroundColor","position"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { Grid, TextField } from '@mui/material';\nimport Input from '../../common/Input/Input';\nimport DashboardStyles from '../DashboardStyles';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Password = ({ open, handleClose }) => {\n  const styles = DashboardStyles();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n\n  const onChange = (e) => {\n    switch (e.target.name) {\n      case 'currentPassword':\n        setCurrentPassword(e.target.value);\n        break;\n      case 'newPassword':\n        setNewPassword(e.target.value);\n        break;\n      case 'confirmNewPassword':\n        setConfirmNewPassword(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n      PaperProps={{\n        style: {\n          backgroundColor: '#2c2d30',\n        },\n      }}\n    >\n      <AppBar sx={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Grid container>\n        <Grid item xs={12}>\n          <TextField variant=\"outlined\" fullWidth />\n        </Grid>\n      </Grid>\n      {/* <Grid container  justifyContent=\"center\">\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" color=\"gainsboro\" align=\"center\">\n              Change Password\n            </Typography>\n          </Grid>\n          <Grid item xs={12} style={{ marginBottom: '0.85rem' }}>\n            <Input\n              name=\"currentPassword\"\n              label=\"\"\n              placeholder=\"Current password\"\n              value={currentPassword}\n              onChange={onChange}\n            />\n          </Grid>{' '}\n          <Grid item xs={12} style={{ marginBottom: '0.85rem' }}>\n            <Input\n              name=\"newPassword\"\n              label=\"\"\n              placeholder=\"New password\"\n              value={newPassword}\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Input\n              name=\"confirmNewPassword\"\n              label=\"\"\n              placeholder=\"Confirm new password\"\n              value={confirmNewPassword}\n              onChange={onChange}\n            />\n          </Grid>\n        </Grid> */}\n    </Dialog>\n  );\n};\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}